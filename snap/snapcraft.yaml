name: ruff
version: v0.0.261
summary: An extremely fast Python linter, written in Rust.
# noinspection YAMLSchemaValidation
# https://youtrack.jetbrains.com/issue/PY-58754
description: |
  Ruff aims to be orders of magnitude faster than alternative tools while integrating more
  functionality behind a single, common interface.

  Ruff can be used to replace [Flake8](https://pypi.org/project/flake8/) (plus a variety of plugins), [`isort`](https://pypi.org/project/isort/),
  [`pydocstyle`](https://pypi.org/project/pydocstyle/), [`yesqa`](https://github.com/asottile/yesqa),
  [`eradicate`](https://pypi.org/project/eradicate/), [`pyupgrade`](https://pypi.org/project/pyupgrade/),
  and [`autoflake`](https://pypi.org/project/autoflake/), all while executing tens or hundreds of
  times faster than any individual tool.

  Ruff goes beyond the responsibilities of a traditional linter, instead functioning as an advanced
  code transformation tool capable of upgrading type annotations, rewriting class definitions, sorting
  imports, and more.
  
  N.B. snap confinement: The snap package for ruff is limited by default to accessing files in your home directory.

confinement: strict
base: core22
# The base that the builds run on - allows building for other architectures
build-base: core22
# Performance difference with xz vs lzo is small in this case, but provides
# a ~40% reduction in file size for a very frequently updating snap.
compression: xz
contact: https://github.com/lengau/ruff/issues
issues:
  - https://github.com/lengau/ruff-snap/issues
  - https://github.com/charliermarsh/ruff/issues
source-code: https://github.com/charlier/ruff
website: https://github.com/charliermarsh/ruff
# This is essentially "build on any arch, for any arch"
architectures:
  - build-on: [amd64,i386,arm64,armhf,s390x,ppc64el]
    build-for: amd64
  - build-on: [amd64,i386,arm64,armhf,s390x,ppc64el]
    build-for: i386
  - build-on: [amd64,i386,arm64,armhf,s390x,ppc64el]
    build-for: arm64
  - build-on: [amd64,i386,arm64,armhf,s390x,ppc64el]
    build-for: armhf
  - build-on: [amd64,i386,arm64,armhf,s390x,ppc64el]
    build-for: s390x
  - build-on: [amd64,i386,arm64,armhf,s390x,ppc64el]
    build-for: ppc64el

parts:
  flake8-to-ruff:
    plugin: nil
    build-packages:
      - python3-pip
      - unzip
    # TODO: switch flake8-to-ruff to GH binaries once they exist
    override-pull: |
      export RUFF_VERSION=$(craftctl get version)
      craftctl default
      case "${CRAFT_TARGET_ARCH}" in
      amd64)
        export PIP_PLATFORM=manylinux2014_x86_64
        ;;
      i386)
        export PIP_PLATFORM=manylinux2014_i686
        ;;
      arm64)
        export PIP_PLATFORM=manylinux2014_aarch64
        ;;
      ppc64el)
        export PIP_PLATFORM=manylinux2014_ppc64le
        ;;
      armhf)
        export PIP_PLATFORM=manylinux2014_armv7l
        ;;
      *)
        export PIP_PLATFORM=manylinux2014_$CRAFT_TARGET_ARCH
        ;;
      esac
      # flake8-to-ruff doesn't get published at every release, so we
      # grab the latest version at or below the release version.
      pip3 download --only-binary=:all: "flake8-to-ruff<=${RUFF_VERSION}"
    override-build: |
      craftctl default
      mkdir -p "${CRAFT_STAGE}/bin"
      unzip -j flake8_to_ruff*.whl '**/flake8-to-ruff' -d "${CRAFT_PART_INSTALL}"
    stage:
      - flake8-to-ruff
    prime:
      - flake8-to-ruff
  ruff:
    plugin: dump
    source:
      - to amd64: https://github.com/charliermarsh/ruff/releases/download/v0.0.261/ruff-x86_64-unknown-linux-gnu.tar.gz
      - to arm64: https://github.com/charliermarsh/ruff/releases/download/v0.0.261/ruff-aarch64-unknown-linux-gnu.tar.gz
      - to armhf: https://github.com/charliermarsh/ruff/releases/download/v0.0.261/ruff-armv7-unknown-linux-gnueabihf.tar.gz
      - to i386: https://github.com/charliermarsh/ruff/releases/download/v0.0.261/ruff-i686-unknown-linux-gnu.tar.gz
      - to ppc64el: https://github.com/charliermarsh/ruff/releases/download/v0.0.261/ruff-powerpc64le-unknown-linux-gnu.tar.gz
      - to s390x: https://github.com/charliermarsh/ruff/releases/download/v0.0.261/ruff-s390x-unknown-linux-gnu.tar.gz
    source-type: tar
    stage:
      - ruff
    prime:
      - ruff

apps:
  ruff:
    command: ruff
    plugs:
      - home
      - removable-media
  flake8-to-ruff:
    command: flake8-to-ruff
    plugs:
      - home
      - removable-media
